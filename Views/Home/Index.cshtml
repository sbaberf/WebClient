@{
    ViewBag.Title = "Home Page";
}

<!DOCTYPE html>

 <link rel="stylesheet" type="text/css" href="style.css" />
    <script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.signalR-1.0.1.js")" type="text/javascript"></script> 
    <script src="@Url.Content("~/signalr/hubs")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.cookie.js")" type="text/javascript"></script>

<script type="text/javascript">

    $(function () {

    var canvas, ctx, flag = false,
    prevX = 0,
    currX = 0,
    prevY = 0,
    currY = 0,
    dot_flag = false;

    var x = "black",
    y = 2;

    function init() {
        canvas = document.getElementById('can');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;

        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);
    }

    function color(obj) {
        switch (obj.id) {
            case "green":
                x = "green";
                break;
            case "blue":
                x = "blue";
                break;
            case "red":
                x = "red";
                break;
            case "yellow":
                x = "yellow";
                break;
            case "orange":
                x = "orange";
                break;
            case "black":
                x = "black";
                break;
            case "white":
                x = "white";
                break;
        }
        if (x == "white") y = 14;
        else y = 2;

    }

    function draw() {
        ctx.beginPath();
        ctx.moveTo(prevX, prevY);
        ctx.lineTo(currX, currY);
        ctx.strokeStyle = x;
        ctx.lineWidth = y;
        ctx.stroke();
        ctx.closePath();
    }

    function erase() {
        var m = confirm("Want to clear");
        if (m) {
            ctx.clearRect(0, 0, w, h);
            document.getElementById("canvasimg").style.display = "none";
        }
    }

    function save() {
        document.getElementById("canvasimg").style.border = "2px solid";
        var dataURL = canvas.toDataURL();
        document.getElementById("canvasimg").src = dataURL;
        document.getElementById("canvasimg").style.display = "inline";
    }

    function findxy(res, e) {
        if (res == 'down') {
            prevX = currX;
            prevY = currY;
            currX = e.clientX - 10;
            currY = e.clientY - 55;

            flag = true;
            dot_flag = true;
            if (dot_flag) {
                ctx.beginPath();
                ctx.fillStyle = x;
                ctx.fillRect(currX, currY, 2, 2);
                ctx.closePath();
                dot_flag = false;
            }
        }
        if (res == 'up' || res == "out") {
            flag = false;
        }
        if (res == 'move') {
            if (flag) {
                prevX = currX;
                prevY = currY;
                currX = e.clientX - 10;
                currY = e.clientY - 55;
                draw();
            }
        }
    }

    });


</script>


<script type="text/javascript">

    $(function () {


        var matrixHub = $.connection.matrixHub;


        $("#loginButton").click(function () {

            $.cookie("un", $("#txtUsername").val());
            $.cookie("p", $("#txtPassword").val());

              
            matrixHub.server.connect(
                $("#txtUsername").val(),
                $("#txtPassword").val(),
                "jabb3r.org");

            $.cookie("con", matrixHub);
            


        });

        

        $("#logoutBdutton").click(function () {

         //   $("#wrapper").hide();

            matrixHub.server.send("sbaberf@jabb3r.org", "sbaberf@jabb3r.org");
            matrixHub.client.send("sbaberf@jabb3r.org", "sbaberf@jabb3r.org");
         //   matrixHub.server.close();
        });

        // signalR callback for outgoing xml debug
        matrixHub.client.sendXml = function (message) {
            $("#log").append("<span class='log send'>" + message + "</span><br/>");
           
        };

        // signalR callback for incoming xml debug
        matrixHub.client.receiveXml = function (message) {
            $("#log").append("<span class='log recv'>" + message + "</span><br/>");
            
        };

        function sendChat(to,msg) {
            matrixHub.server.sendChatMessage(to,msg);
         //   matrixHub.sendChatMessage(to, msg);            
        }

        // signalR callbck for displaying matrix event (infos only)
        matrixHub.client.displayEvent = function (event) {
            $("#events").append("<span class='event'>" + event + "</span><br/>");

            if (event == "OnLogin") {
              //  matrixHub.server.close();
               $("#log").append("<span class='log recv'>" + "AOOO NA JEEEEEEEEEE" + "</span><br/>");
            //    window.location.href = "Home/Main";
            }
        };

        // signalR callback for contacts
        matrixHub.client.onRosterItem = function (uniqueid, jid, name) {
            var statusId = "status_" + uniqueid;
            var showId = "show_" + uniqueid;
            $("#roster").append(
                "<li id='" + uniqueid + "'>" +
                    "<span class='jid'>" + jid + "</span>" +
                    "<span class='name'>" + name + "</span>" +
                    "<span id='" + showId + "' class='show'></span>" +
                    "<span id='" + statusId + "' class='status'>Offline</span>" +
                "</li>");
        };

        // signalR callbck for incoming presence
        matrixHub.client.onPresence = function (uniqueid, jid, show, status) {
            var showId = "show_" + uniqueid;
            var statusId = "status_" + uniqueid;
            $("#" + showId).text(show);
            $("#" + statusId).text(status);
        };

        matrixHub.client.onMessage = function (msg) {
            $("#log").append(
                    "<span class='from'>" + msg.From + ":</span>" +
                    "<span class='message'>" + msg.Body + ":</span>" +
                    "</br>"
            );

            if (msg.Body != "null") {

                mydraw2(msg.Body);
            }
        };

        $.connection.hub.start().done(function () {

            $('#logoutButton').click(function () {
                // Call the Send method on the hub. 
                chat.server.send("sbaberf2@jabb3r.org", "sbaberf2@jabb3r.org");
                // Clear text box and reset focus for next comment. 
             //   $('#message').val('').focus();
            });


        });

        


        

        var canvas=document.getElementById("canvas");
        var ctx = canvas.getContext("2d");
        var paint;

        $('#canvas').mousedown(function (e) {
            var mouseX = e.pageX - this.offsetLeft;
            var mouseY = e.pageY - this.offsetTop;

            paint = true;
            addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop,false);
            redraw();
        });

        $('#canvas').mousemove(function (e) {
            if (paint) {
                addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
                redraw();
            }
        });

        $('#canvas').mouseup(function (e) {
            paint = false;
        });

        $('#canvas').mouseleave(function (e) {
            paint = false;
        });

        var clickX = new Array();
        var clickY = new Array();
        var clickDrag = new Array();

        

        var myT = new Array;


        

        function addClick(x, y, dragging) {
            clickX.push(x);
            clickY.push(y);
            clickDrag.push(dragging);
        }

        function redraw() {

            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Clears the canvas
            ctx.strokeStyle = "#df4b26";
            ctx.lineJoin = "round";
            ctx.lineWidth = 6;

        //   myT.splice(0, myT.length);

            //   $("#cord").append("<span>" + "/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\/\/" + " </span>" + "</br>");
            $("#cord").append("<span>" + "/\/\/\/\/\/\\/\/\/\HERE/\/\/\/\/\/\/\/\/" + " </span>" + "</br>");

            for (var i = 0; i < clickX.length; i++) {

                ctx.beginPath();

                if (clickDrag[i] && i) {

                    $("#cord").append("<span>" + clickX[i - 1] + " " + clickY[i - 1] + " </span>" + "</br>");

          //         myT.push(clickX[i - 1]);
         //          myT.push(",");
          //         myT.push(clickY[i - 1]);
           //        myT.push(",");
          //      myT.push(clickDrag[i]);
          //         myT.push("|");
//$("#cord").append("<span> X : " + clickX[i - 1] + " </span>" + "<span> Y : " + clickY[i - 1] + " </span>" + "</br>");
                    ctx.moveTo(clickX[i - 1], clickY[i - 1]);

                } else {

        //           myT.push((clickX[i] - 1));
       //            myT.push(",");
        //            myT.push(clickY[i]);
         //           myT.push(",");
        //            myT.push(false);
                    //           myT.push("|");

                    $("#cord").append("<span>" + (clickX[i] - 1) + " " + clickY[i] + " </span>" + "</br>");

         //           $("#cord").append("<span> X2 : " + (clickX[i] - 1) + " </span>" + "<span> Y2 : " + clickY[i] + " </span>" + "</br>");
                    ctx.moveTo(clickX[i] - 1, clickY[i]);
                }

                $("#cord").append("<span>" + "/\/\/\/\/\/\\/\/\/\HERE/\/\/\/\/\/\/\/\/" + " </span>" + "</br>");

                ctx.lineTo(clickX[i], clickY[i]);
                ctx.closePath();
                ctx.stroke();
            }

       //     clickX.pop();
        //    clickY.pop();
       //     clickDrag.pop();

       //     clickX.push(clickX[i]);
       //     clickY.push(clickY[i]);
           // clickDrag.push(false);
        }

        function mydraw(msg) {

            for (var h = 0; h < msg.length; h++) {
                $("#cord").append("<span>" + msg[h] + " </span>");
            }

            sendChat("sbaberf2@jabb3r.org",msg.toString());

            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Clears the canvas
            ctx.strokeStyle = "#443450";
            ctx.lineJoin = "round";
            ctx.lineWidth = 55;

            var clickXT = new Array();
            var clickYT = new Array();
            var clickDragT = new Array();

            var y = 0;

            for (var g = 0; g < msg.length; ) {

               
               
                clickXT[y] = msg[g];
                g++;
                clickYT[y] = msg[g];
                g++;
                clickDragT[y] = msg[g];
                g++;

                y++;

            }

            for (var i = 0; i < clickXT.length; i++) {

                ctx.beginPath();

                if (clickDragT[i] && i) {
                   
                    ctx.moveTo(clickXT[i - 1], clickYT[i - 1]);

                    $("#cord").append("<span>" + clickXT[i - 1] + " " + clickYT[i - 1] + " </span>" + "</br>");

                } else {

                    ctx.moveTo(clickXT[i] - 1, clickYT[i]);
                    $("#cord").append("<span>" + (clickX[i] - 1) + " " + clickY[i] + " </span>" + "</br>");
                }

                ctx.lineTo(clickXT[i], clickYT[i]);
                ctx.closePath();
                ctx.stroke();
            }

            
        }


        function mydraw2(msg2) {

            for (var h = 0; h < msg2.length; h++) {
                $("#cord").append("<span>" + msg2[h] + " </span>");
            }

            var msg = new Array();

            var val = new Array();
            var count = 0;
            var c2 = 0;

            msg = msg2.split(',');

     //       for (var j = 0; j < msg2.length; j++) {

     //           if (msg2[j] != ",") {
     //               val[count] = msg2[j];
     //               count++;
      //          }

      //          if (msg2[j] == ",") {

      //              msg[c2] = val;
     //               c2++;
     //               val.slice(0, val.length);
     //               count = 0;

     //           }


        //..    }

        //    sendChat("sbaberf2@jabb3r.org", msg.toString());

            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Clears the canvas
            ctx.strokeStyle = "#443450";
            ctx.lineJoin = "round";
            ctx.lineWidth = 55;

            var clickXT = new Array();
            var clickYT = new Array();
            var clickDragT = new Array();

            var y = 0;

            for (var g = 0; g < msg.length;) {



                clickXT[y] = msg[g];
                g++;
                clickYT[y] = msg[g];
                g++;
                clickDragT[y] = msg[g];
                g++;

                y++;

            }

            for (var i = 0; i < clickXT.length; i++) {

                ctx.beginPath();

                if (clickDragT[i] && i) {

                    ctx.moveTo(clickXT[i - 1], clickYT[i - 1]);

                    $("#cord").append("<span>" + clickXT[i - 1] + " " + clickYT[i - 1] + " </span>" + "</br>");

                } else {

                    ctx.moveTo(clickXT[i] - 1, clickYT[i]);
                    $("#cord").append("<span>" + (clickX[i] - 1) + " " + clickY[i] + " </span>" + "</br>");
                }

                ctx.lineTo(clickXT[i], clickYT[i]);
                ctx.closePath();
                ctx.stroke();
            }


        }

        

        function generateArray() {

            var sampleCS = new Array();

            for (var i = 0; i < clickX.length; i++) {

                var y = 0;
                y = i * 3;

     
                    sampleCS[y] = clickX[i];
                    sampleCS[y + 1] = clickY[i];
                    sampleCS[y + 2] = clickDrag[i];

            }

      //      $("#cord").append("<span>" + "/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\/\/" + " </span>" + "</br>");
            for (var h = 0; h < sampleCS.length; h++) {
                $("#cord").append("<span>" + sampleCS[h] + " </span>" );
            }
       //     $("#cord").append("</br><span>" + "/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\/\/" + " </span>" + "</br>");

            mydraw(sampleCS);
        }

        $('#clr').click(function () {
            // Call the Send method on the hub. 
          //  $("#cord").append("<span> myT : " + myT.toLocaleString() + " </span>" + "</br>");

            generateArray();
            // Clear text box and reset focus for next comment. 
            //   $('#message').val('').focus();
        });

       

           


      
    }); // end $(function(){});
   
    

</script>

<html xmlns="http://www.w3.org/1999/xhtml">

    <head>
    <meta charset="UTF-8" /> 
    <title>
        HTML Document Structure
    </title>
    <link rel="stylesheet" type="text/css" href="style.css" />
</head>


    <body>
        
        <div id="draw">

         <div>
    Shared White Board
    </div>

    <div>

    <table>
    
    <tr>
    
    <td>
    Please draw here
    </td>

    <td>
    Select Color
    </td>
        
    </tr>

    <tr>

     <td>
     <canvas id="canvas" width="400" height="400" style="border:2px solid; background:white"></canvas>
     </td>

     <td>

    <div style="width:10px;height:10px;background:green;" id="green" onclick="color(this)"></div>
    <div style="width:10px;height:10px;background:blue;" id="blue" onclick="color(this)"></div>
    <div style="width:10px;height:10px;background:red;" id="red" onclick="color(this)"></div>
    <div style="width:10px;height:10px;background:yellow;" id="yellow" onclick="color(this)"></div>
    <div style="width:10px;height:10px;background:orange;" id="orange" onclick="color(this)"></div>
    <div style="width:10px;height:10px;background:black;" id="black" onclick="color(this)"></div>
    <div>Eraser</div>
    <div style="width:10px;height:10px;background:white;border:2px solid;" id="white" onclick="color(this)"></div>
    
    </td>
    
    
    </tr>

    <tr style="width:800px">
    <td style="width:400px"><input type="button" value="save" id="btn" class="button"></td>
    <td style="width:400px"><input type="button" value="clear" id="clr" class="button"></td>
    </tr>

    <tr style="width:800px">
    <img id="canvasimg" style="display:none;">
    </tr>
    
    </table>
    
        <div id="cord"></div>
    
    </div>

</div>

<div id="wrapper">

	<form name="login-form" class="login-form" runat="server" method="post">
	
		<div class="header">
        <h1 style="text-align: center">
            <img alt="" src="images/k.png" style="width: 190px; height: 89px; text-align: center;" /></h1>
		<h1 style="font-size: large; font-family: Exo; text-transform: capitalize;text-align: center;">Welcome To ALLURE </h1>     
		</div>
	
		<div class="content">
		<input id="txtUsername" type="text" value="sbaberf" class="input username" placeholder="Username" style="font-family: exo" />
		<div class="user-icon"></div>
		<input id="txtPassword" type="password" value="pirates" class="input password" placeholder="Password" style="font-family: exo" />
		<div class="pass-icon"></div><br />	
            <br />	
            <h1 style="font-size: medium;font-family: exo;text-align: center;">Please Enter Your Credentials</h1>
            	
		</div>

		<div class="footer">
		

            <button id="loginButton" type="button" class="button" style="font-family: exo">Login</button>
            <button id="logoutButton" type="button" class="register" style="font-family: exo">Logout</button>
           
		
		</div>
	
        </form>

</div>

<div class="gradient"></div>

        
<div id="log"></div>
    


        </body>

   
</html>



    
